""" tests for init"""
import os
from os import makedirs, rmdir
import pathlib

from vetive.__init__ import (
    fibonacci_numbers,
    get_env_var,
    is_palindrome,
    is_prime,
    merge_sorted_lists,
    random_digit_string,
    all_files_oftype,
    words_from_corpus,
)


def test_get_env_var():
    """test of get_env_var"""
    ev_home = get_env_var("HOME")
    ev_user = get_env_var("USER")
    ev_hsu = get_env_var("HOMESHELLUSER")
    assert ev_home is not None
    assert ev_user is not None
    assert ev_hsu is None


def test_merge_sorted_lists():
    """test of merge_sorted_lists"""
    list1 = [1, 4, 5, 5, 6]
    list2 = [2, 7, 11, 12, 12, 13]
    expected_output = [1, 2, 4, 5, 5, 6, 7, 11, 12, 12, 13]
    output = merge_sorted_lists(list1, list2)
    assert output == expected_output
    output = merge_sorted_lists(list2, list1)
    assert output == expected_output
    output = merge_sorted_lists(list1, [])
    assert output == list1
    output = merge_sorted_lists([], list2)
    assert output == list2
    output = merge_sorted_lists([], [])
    assert output == []


def test_is_palindrome():
    """test of is_palindrome"""
    assert is_palindrome("Tipan") == False
    assert is_palindrome("madam") == True
    assert is_palindrome("aaaaaaa") == True
    assert is_palindrome("street") == False


def test_fibonacci_numbers_generator():
    """test fibonacci_numbers_generator"""
    assert list(fibonacci_numbers(0)) == [
        0,
    ]
    assert list(fibonacci_numbers(1)) == [0, 1, 1]
    assert list(fibonacci_numbers(2)) == [0, 1, 1, 2]
    assert list(fibonacci_numbers(3)) == [0, 1, 1, 2, 3]
    assert list(fibonacci_numbers(4)) == [0, 1, 1, 2, 3]
    assert list(fibonacci_numbers(88)) == [
        0,
        1,
        1,
        2,
        3,
        5,
        8,
        13,
        21,
        34,
        55,
    ]


def test_words_from_corpus():
    """test words_from_corpus"""
    assert list(words_from_corpus("tests/corpus/corpus_single")) == [
        "Bonjour",
        "le",
        "monde",
        "Hello",
        "world",
        "Buenos",
        "dias",
        "Comment",
        "allez",
        "vous",
        "Je",
        "suis",
        "Dede",
        "Assann",
        "et",
        "j",
        "apprend",
        "a",
        "programmer",
        "avec",
        "Tipan",
        "Verella",
        "Il",
        "est",
        "un",
        "Data",
        "scientist",
        "et",
        "vit",
        "aux",
        "USA",
    ]
    assert list(words_from_corpus("tests/corpus/corpus_vid")) == []
    assert list(words_from_corpus("tests/corpus/corpus_multiple")) == [
        "WHEN",
        "WE",
        "WERE",
        "YOUNG",
        "ADELE",
        "LYRICS",
        "Everybody",
        "loves",
        "the",
        "things",
        "you",
        "do",
        "From",
        "the",
        "way",
        "you",
        "talk",
        "To",
        "the",
        "way",
        "you",
        "move",
        "Everybody",
        "here",
        "is",
        "watching",
        "you",
        "Cause",
        "you",
        "feel",
        "like",
        "home",
        "You",
        "re",
        "like",
        "a",
        "dream",
        "come",
        "true",
        "But",
        "if",
        "by",
        "chance",
        "you",
        "re",
        "here",
        "alone",
        "Can",
        "I",
        "have",
        "a",
        "moment",
        "Before",
        "I",
        "go",
        "tool",
        "poetry",
        "name",
        "vetive",
        "version",
        "0",
        "1",
        "9",
        "description",
        "Rasin",
        "videyo",
        "YouTube",
        "authors",
        "J",
        "Tipan",
        "Verella",
        "tverella@tunein",
        "com",
        "Dede",
        "Assann",
        "dedeassann20@gmail",
        "com",
        "tool",
        "poetry",
        "dependencies",
        "python",
        "3",
        "9",
        "google",
        "api",
        "python",
        "client",
        "2",
        "51",
        "0",
        "google",
        "auth",
        "oauthlib",
        "0",
        "5",
        "2",
        "google",
        "auth",
        "httplib2",
        "0",
        "1",
        "0",
        "pydantic",
        "1",
        "9",
        "1",
        "tool",
        "poetry",
        "dev",
        "dependencies",
        "black",
        "22",
        "3",
        "0",
        "mypy",
        "0",
        "961",
        "pylint",
        "2",
        "14",
        "3",
        "pytest",
        "7",
        "1",
        "2",
        "coverage",
        "6",
        "4",
        "1",
        "pytest",
        "cov",
        "3",
        "0",
        "0",
        "ipython",
        "8",
        "4",
        "0",
        "build",
        "system",
        "requires",
        "poetry",
        "core",
        "1",
        "0",
        "0",
        "build",
        "backend",
        "poetry",
        "core",
        "masonry",
        "api",
        "cachetools",
        "5",
        "2",
        "0",
        "python",
        "version",
        "3",
        "7",
        "and",
        "python",
        "version",
        "4",
        "0",
        "and",
        "python",
        "version",
        "3",
        "7",
        "and",
        "python",
        "full",
        "version",
        "3",
        "0",
        "0",
        "or",
        "python",
        "full",
        "version",
        "3",
        "6",
        "0",
        "and",
        "python",
        "version",
        "3",
        "7",
        "certifi",
        "2022",
        "6",
        "15",
        "python",
        "version",
        "3",
        "7",
        "and",
        "python",
        "version",
        "4",
        "and",
        "python",
        "version",
        "3",
        "6",
        "and",
        "python",
        "full",
        "version",
        "3",
        "0",
        "0",
        "or",
        "python",
        "full",
        "version",
        "3",
        "4",
        "0",
        "and",
        "python",
        "version",
        "3",
        "6",
        "charset",
        "normalizer",
        "2",
        "1",
        "0",
        "python",
        "version",
        "3",
        "7",
        "and",
        "python",
        "version",
        "4",
        "and",
        "python",
        "version",
        "3",
        "6",
        "and",
        "python",
        "full",
        "version",
        "3",
        "0",
        "0",
        "or",
        "python",
        "full",
        "version",
        "3",
        "4",
        "0",
        "and",
        "python",
        "version",
        "3",
        "6",
        "and",
        "python",
        "full",
        "version",
        "3",
        "6",
        "0",
        "google",
        "api",
        "core",
        "2",
        "8",
        "2",
        "python",
        "version",
        "3",
        "7",
        "google",
        "api",
        "python",
        "client",
        "2",
        "55",
        "0",
        "python",
        "version",
        "3",
        "7",
        "google",
        "auth",
        "httplib2",
        "0",
        "1",
        "0",
        "google",
        "auth",
        "oauthlib",
        "0",
        "5",
        "2",
        "python",
        "version",
        "3",
        "6",
        "google",
        "auth",
        "2",
        "9",
        "1",
        "python",
        "version",
        "3",
        "7",
        "and",
        "python",
        "full",
        "version",
        "3",
        "0",
        "0",
        "or",
        "python",
        "full",
        "version",
        "3",
        "6",
        "0",
        "and",
        "python",
        "version",
        "3",
        "7",
        "googleapis",
        "common",
        "protos",
        "1",
        "56",
        "4",
        "python",
        "version",
        "3",
        "7",
        "httplib2",
        "0",
        "20",
        "4",
        "python",
        "version",
        "3",
        "7",
        "and",
        "python",
        "full",
        "version",
        "3",
        "0",
        "0",
        "or",
        "python",
        "full",
        "version",
        "3",
        "4",
        "0",
        "and",
        "python",
        "version",
        "3",
        "7",
        "idna",
        "3",
        "3",
        "python",
        "version",
        "3",
        "7",
        "and",
        "python",
        "version",
        "4",
        "and",
        "python",
        "version",
        "3",
        "6",
        "and",
        "python",
        "full",
        "version",
        "3",
        "0",
        "0",
        "or",
        "python",
        "full",
        "version",
        "3",
        "4",
        "0",
        "and",
        "python",
        "version",
        "3",
        "6",
        "oauthlib",
        "3",
        "2",
        "0",
        "python",
        "version",
        "3",
        "6",
        "and",
        "python",
        "full",
        "version",
        "3",
        "0",
        "0",
        "or",
        "python",
        "full",
        "version",
        "3",
        "4",
        "0",
        "and",
        "python",
        "version",
        "3",
        "6",
        "protobuf",
        "4",
        "21",
        "4",
        "python",
        "version",
        "3",
        "7",
        "pyasn1",
        "modules",
        "0",
        "2",
        "8",
        "python",
        "version",
        "3",
        "7",
        "and",
        "python",
        "full",
        "version",
        "3",
        "0",
        "0",
        "or",
        "python",
        "full",
        "version",
        "3",
        "6",
        "0",
        "and",
        "python",
        "version",
        "3",
        "7",
        "pyasn1",
        "0",
        "4",
        "8",
        "python",
        "version",
        "3",
        "7",
        "and",
        "python",
        "full",
        "version",
        "3",
        "0",
        "0",
        "and",
        "python",
        "version",
        "4",
        "and",
        "python",
        "version",
        "3",
        "7",
        "and",
        "python",
        "full",
        "version",
        "3",
        "0",
        "0",
        "or",
        "python",
        "full",
        "version",
        "3",
        "6",
        "0",
        "and",
        "python",
        "version",
        "3",
        "7",
        "or",
        "python",
        "full",
        "version",
        "3",
        "6",
        "0",
        "and",
        "python",
        "version",
        "3",
        "7",
        "and",
        "python",
        "version",
        "4",
        "and",
        "python",
        "version",
        "3",
        "7",
        "and",
        "python",
        "full",
        "version",
        "3",
        "0",
        "0",
        "or",
        "python",
        "full",
        "version",
        "3",
        "6",
        "0",
        "and",
        "python",
        "version",
        "3",
        "7",
        "pydantic",
        "1",
        "9",
        "1",
        "python",
        "full",
        "version",
        "3",
        "6",
        "1",
        "pyparsing",
        "3",
        "0",
        "9",
        "python",
        "full",
        "version",
        "3",
        "6",
        "8",
        "and",
        "python",
        "version",
        "3",
        "7",
        "requests",
        "oauthlib",
        "1",
        "3",
        "1",
        "python",
        "version",
        "3",
        "6",
        "and",
        "python",
        "full",
        "version",
        "3",
        "0",
        "0",
        "or",
        "python",
        "full",
        "version",
        "3",
        "4",
        "0",
        "and",
        "python",
        "version",
        "3",
        "6",
        "requests",
        "2",
        "28",
        "1",
        "python",
        "version",
        "3",
        "7",
        "and",
        "python",
        "version",
        "4",
        "and",
        "python",
        "version",
        "3",
        "6",
        "and",
        "python",
        "full",
        "version",
        "3",
        "0",
        "0",
        "or",
        "python",
        "full",
        "version",
        "3",
        "4",
        "0",
        "and",
        "python",
        "version",
        "3",
        "6",
        "rsa",
        "4",
        "9",
        "python",
        "version",
        "3",
        "6",
        "and",
        "python",
        "version",
        "4",
        "and",
        "python",
        "version",
        "3",
        "7",
        "and",
        "python",
        "full",
        "version",
        "3",
        "0",
        "0",
        "or",
        "python",
        "full",
        "version",
        "3",
        "6",
        "0",
        "and",
        "python",
        "version",
        "3",
        "7",
        "six",
        "1",
        "16",
        "0",
        "python",
        "version",
        "3",
        "7",
        "and",
        "python",
        "full",
        "version",
        "3",
        "0",
        "0",
        "or",
        "python",
        "full",
        "version",
        "3",
        "6",
        "0",
        "and",
        "python",
        "version",
        "3",
        "7",
        "typing",
        "extensions",
        "4",
        "3",
        "0",
        "python",
        "version",
        "3",
        "7",
        "and",
        "python",
        "full",
        "version",
        "3",
        "6",
        "1",
        "uritemplate",
        "4",
        "1",
        "1",
        "python",
        "version",
        "3",
        "7",
        "urllib3",
        "1",
        "26",
        "11",
        "python",
        "version",
        "3",
        "7",
        "and",
        "python",
        "full",
        "version",
        "3",
        "0",
        "0",
        "and",
        "python",
        "version",
        "4",
        "and",
        "python",
        "version",
        "3",
        "6",
        "and",
        "python",
        "full",
        "version",
        "3",
        "0",
        "0",
        "or",
        "python",
        "full",
        "version",
        "3",
        "4",
        "0",
        "and",
        "python",
        "version",
        "3",
        "6",
        "or",
        "python",
        "full",
        "version",
        "3",
        "6",
        "0",
        "and",
        "python",
        "version",
        "4",
        "and",
        "python",
        "version",
        "3",
        "7",
        "and",
        "python",
        "version",
        "3",
        "6",
        "and",
        "python",
        "full",
        "version",
        "3",
        "0",
        "0",
        "or",
        "python",
        "full",
        "version",
        "3",
        "4",
        "0",
        "and",
        "python",
        "version",
        "3",
        "6",
    ]


def test_all_files_oftype():
    """test all_files_oftype"""
    # empty directory
    tmp_dir_name = f"tmp_directory_{random_digit_string()}"
    makedirs(tmp_dir_name)
    assert all_files_oftype(tmp_dir_name, "txt") == []
    # directory with no files of the type
    assert all_files_oftype(tmp_dir_name, tmp_dir_name) == []
    # when there is stuff to return
    pathlib.Path(f"{tmp_dir_name}/all_files_oftype.txt").touch()
    assert all_files_oftype(tmp_dir_name, "txt") == [
        f"{tmp_dir_name}/all_files_oftype.txt"
    ]
    os.remove(f"{tmp_dir_name}/all_files_oftype.txt")
    rmdir(tmp_dir_name)


def test_is_prime():
    """test is_prime"""
    assert is_prime(2)
    assert is_prime(3)
    assert is_prime(5)
    assert is_prime(7)
    assert is_prime(11)
    assert is_prime(23)
    assert not is_prime(12345)
    assert is_prime(12347)
